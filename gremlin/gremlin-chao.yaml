apiVersion: v1
kind: Namespace
metadata:
  name: gremlin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: chao
    app.kubernetes.io/name: chao
    app.kubernetes.io/version: "1"
  name: chao
  namespace: gremlin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: chao
      app.kubernetes.io/name: chao
      app.kubernetes.io/version: "1"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: chao
        app.kubernetes.io/name: chao
        app.kubernetes.io/version: "1"
    spec:
      serviceAccountName: chao
      containers:
      - image: gremlin/chao:latest
        args:
        - "-team_id"
        - "d099bcc2-ec66-517b-8c02-a165c030632f"
        - "-cluster_id"
        - "terraform-eks-ccdb"
        - "-cert_path"
        - "/gremlin/certs/gremlin.cert"
        - "-key_path"
        - "/gremlin/certs/gremlin.key"
        imagePullPolicy: Always
        name: chao
        volumeMounts:
        - mountPath: /gremlin/certs
          name: gremlin-cert
          readOnly: true
      volumes:
      - name: gremlin-cert
        secret:
          defaultMode: 420
          secretName: gremlin-team-cert
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chao
  namespace: gremlin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gremlin-watcher
rules:
  - apiGroups: ["apps"]
    resources: ["replicasets", "deployments", "statefulsets", "daemonsets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: [""]
    resources: ["pods", "nodes"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chao
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gremlin-watcher
subjects:
  - kind: ServiceAccount
    name: chao
    namespace: gremlin
